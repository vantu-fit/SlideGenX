{"input": "Section: Machine Learning Workflow\nSlide: The process of training a machine learning model involves data collection, preprocessing, training, and evaluation.\nTask: Generate a suitable diagram (Mermaid code) for this slide.", "output": "diagram_type: flowchart\ngraph LR\nA[Data Collection] --> B[Preprocessing] --> C[Training] --> D[Evaluation]"}
{"input": "Section: Types of Learning\nSlide: There are three main types: Supervised, Unsupervised, and Reinforcement Learning.\nTask: Generate a diagram.", "output": "diagram_type: classDiagram\nclassDiagram\n    Supervised <|-- Learning\n    Unsupervised <|-- Learning\n    Reinforcement <|-- Learning"}
{"input": "Section: Model Evaluation\nSlide: Evaluation metrics include accuracy, precision, recall, and F1-score.\nTask: Generate a diagram.", "output": "diagram_type: pie\npie title Model Evaluation Metrics\n    \"Accuracy\" : 40\n    \"Precision\" : 20\n    \"Recall\" : 20\n    \"F1-score\" : 20"}
{"input": "Section: Data Pipeline\nSlide: Data flows from raw input to cleaning, transformation, and storage.\nTask: Generate a diagram.", "output": "diagram_type: flowchart\ngraph TD\nA[Raw Input] --> B[Cleaning] --> C[Transformation] --> D[Storage]"}
{"input": "Section: Project Timeline\nSlide: The project has phases: Planning, Development, Testing, Deployment.\nTask: Generate a timeline diagram.", "output": "diagram_type: timeline\ntimeline\n    Planning : 2024-01-01 : 30d\n    Development : 2024-02-01 : 60d\n    Testing : 2024-04-01 : 20d\n    Deployment : 2024-05-01 : 10d"}
{"input": "Section: Neural Network Structure\nSlide: A neural network consists of input, hidden, and output layers.\nTask: Generate a diagram.", "output": "diagram_type: flowchart\ngraph LR\nA[Input Layer] --> B[Hidden Layer] --> C[Output Layer]"}
{"input": "Section: Model Comparison\nSlide: Compare Decision Tree, SVM, and Neural Network.\nTask: Generate a diagram.", "output": "diagram_type: erDiagram\nerDiagram\n    DecisionTree ||--o{ Model : compares\n    SVM ||--o{ Model : compares\n    NeuralNetwork ||--o{ Model : compares"}
{"input": "Section: Training Loop\nSlide: The training loop iterates over epochs and batches.\nTask: Generate a diagram.", "output": "diagram_type: sequenceDiagram\nsequenceDiagram\n    participant Trainer\n    participant Model\n    Trainer->>Model: Train on batch\n    Model-->>Trainer: Update weights\n    loop Epochs\n        Trainer->>Model: Next batch\n    end"}
{"input": "Section: Hyperparameter Tuning\nSlide: Adjust learning rate, batch size, and regularization.\nTask: Generate a diagram.", "output": "diagram_type: stateDiagram\nstateDiagram-v2\n    [*] --> SetLearningRate\n    SetLearningRate --> SetBatchSize\n    SetBatchSize --> SetRegularization\n    SetRegularization --> [*]"}
{"input": "Section: Data Split\nSlide: Data is split into training, validation, and test sets.\nTask: Generate a diagram.", "output": "diagram_type: flowchart\ngraph TD\nA[Full Dataset] --> B[Training Set]\nA --> C[Validation Set]\nA --> D[Test Set]"} 